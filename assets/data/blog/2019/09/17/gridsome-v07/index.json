{"hash":"390d302cd552305fd677e06bbdca7834a7d72d7b","data":{"post":{"title":"Gridsome v0.7","date":"17. September 2019","timeToRead":7,"content":"<ul>\n<li><a href=\"#vue-remark-plugin\">Vue Remark plugin</a>: Use Vue Components in Markdown.</li>\n<li><a href=\"#new-schema-api\">New Schema API</a>: Define what fields that are coming from an external source.</li>\n<li><a href=\"#new-template-configuration\">New template configuration</a>: Setup templates and routes for collections in one place.</li>\n<li><a href=\"#dynamic-routing\">Dynamic routing</a>: File-based &#x26; Programmatically dynamic routing.</li>\n<li><a href=\"#custom-appvue\">Custom App.vue</a>: Use to create a global layout that can have full-page transitions.</li>\n<li><a href=\"#deprecation-notices\">Deprecation notices</a>: Better deprecation messages in terminal.</li>\n<li><a href=\"#shareable-network-url\">Shareable Network URL</a>: Perfect for mobile live preview with hot-reloading.</li>\n<li>4000+ <a href=\"https://github.com/gridsome/gridsome\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub Stars ðŸŒŸ</a>.</li>\n</ul>\n<h2 id=\"vue-remark-plugin\"><a href=\"#vue-remark-plugin\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vue Remark plugin</h2>\n<p>With Gridsome 0.7 follows a new plugin called <a href=\"/plugins/@gridsome/vue-remark\">@gridsome/vue-remark</a>. It lets you add Vue Components to Markdown files. This is perfect for Documentation, Design Systems, or portfolio websites. It's an Vue / Gridsome alternative to <a href=\"https://mdxjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDX</a>.</p>\n<p>Here is a quick overview of how it works:</p>\n<p>1) Install the plugin and add configs:</p>\n<pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      use<span class=\"token operator\">:</span> <span class=\"token string\">'@gridsome/vue-remark'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        typeName<span class=\"token operator\">:</span> <span class=\"token string\">'Documentation'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Required</span>\n        baseDir<span class=\"token operator\">:</span> <span class=\"token string\">'./content/docs'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Where .md files are located</span>\n        pathPrefix<span class=\"token operator\">:</span> <span class=\"token string\">'/docs'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Add route prefix. Optional</span>\n        template<span class=\"token operator\">:</span> <span class=\"token string\">'./src/templates/Documentation.vue'</span> <span class=\"token comment\">// Optional</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>In this example <code class=\"language-text\">/content/docs/index.md</code> will be <code class=\"language-text\">website.com/docs/</code>,\nand <code class=\"language-text\">/content/docs/install-guide.md</code> will be <code class=\"language-text\">website.com/docs/install-guide/</code>.</p>\n<p>By default it takes any <strong>.md</strong> files in <code class=\"language-text\">baseDir</code> folder and uses them for file-based routing like <a href=\"/docs/pages/\">Pages</a> works. You can override this by using a <code class=\"language-text\">route</code> config.</p>\n<p>2) Setup a template and include the <code class=\"language-text\">&lt;VueRemarkContent /&gt;</code> component:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Layout</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>{{ $page.documentation.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>intro<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ $page.documentation.excerpt }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>VueRemarkContent</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Layout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- Front-matter fields can be queried from GraphQL layer --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>page-query</span><span class=\"token punctuation\">></span></span><span class=\"token graphql\">\n<span class=\"token keyword\">query</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  documentation<span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    title\n    excerpt\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>page-query</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>3) Import and use Vue components in Markdown:</p>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\ntitle<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> cool title\nexcerpt<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Lorem</span> <span class=\"token maybe-class-name\">Ipsum</span> is simply dummy text<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n<span class=\"token comment\">// Import any Vue Component. Even other .md files!</span>\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">YouTube</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/components/YouTube.vue'</span>\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">AboutUs</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/sections/AboutUs.md'</span>\n\n<span class=\"token comment\">// Import any JSON if you need data.</span>\n<span class=\"token keyword module\">import</span> data <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/data/youtube.json'</span>\n\n<span class=\"token comment\">// Use front-matter fields anywhere.</span>\n# <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $frontmatter<span class=\"token punctuation\">.</span><span class=\"token property-access\">title</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $frontmatter<span class=\"token punctuation\">.</span><span class=\"token property-access\">excerpt</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Use your imported Vue Components.</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">YouTube</span></span> <span class=\"token attr-name\">:id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>data.id<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AboutUs</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token maybe-class-name\">Isn</span>'t it great<span class=\"token operator\">?</span> ðŸ¥³</code></pre>\n<p>You can use <code class=\"language-text\">&lt;page-query&gt;</code> &#x26; <code class=\"language-text\">&lt;style&gt;</code> blocks inside the Markdown files too!</p>\n<p>Learn more about <a href=\"/plugins/@gridsome/vue-remark\">@gridsome/vue-remark</a></p>\n<h2 id=\"new-schema-api\"><a href=\"#new-schema-api\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>New Schema API</h2>\n<p>Gridsome generates the GraphQL schema for metadata and collections based on the data which is discovered on startup. That's great for simple projects but will often lead to errors with, for example missing fields because content has been removed in an external source. This API lets you define your own schema types to have persisted fields.</p>\n<pre class=\"language-js\"><code class=\"language-js\">api<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">loadSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> addSchemaTypes <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">addSchemaTypes</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    type Post implements Node {\n      title: String\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>ðŸ™Œ This will fix problems for <strong>data sources</strong> where the data fields can change.</p>\n<p>For example, <a href=\"https://sanity.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sanity.io</a> (A Headless CMS) has created a source plugin (<a href=\"/plugins/gridsome-source-sanity\">gridsome-source-sanity</a>) that uses the Schema API to make sure Gridsome know what fields that are being used in Sanity.io.</p>\n<p>Read more about the <a href=\"/docs/schema-api/\">Schema API</a></p>\n<h2 id=\"new-template-configuration\"><a href=\"#new-template-configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>New template configuration</h2>\n<p>Previously, each collection has been given a route in order to assign it to a template with the same name inside the <code class=\"language-text\">src/templates</code> directory. Routes were spread across many plugin options and some also hidden within plugins. <strong>The new <code class=\"language-text\">templates</code> config tries to collect all collection routes in a single property in <code class=\"language-text\">gridsome.config.js</code>.</strong></p>\n<blockquote>\n<p>This gives better overview of all template routes, and you can also have multiple templates and routes for one collection. For example <code class=\"language-text\">/product/:slug</code> + <code class=\"language-text\">/product/:slug/reviews</code>.</p>\n</blockquote>\n<p>To create a route for a <a href=\"/docs/collections/\">collection</a> you simply add <code class=\"language-text\">CollectionName: &#39;/any/route/:title&#39;</code> to the new <a href=\"/docs/templates/\">templates</a>  config. A Vue component in <code class=\"language-text\">src/templates</code> with the same name as the collection will be used as template by default. Here are some examples:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gridsome.config.js</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  templates<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token comment\">// These will look for and use src/templates/{name}.vue</span>\n    <span class=\"token maybe-class-name\">Post</span><span class=\"token operator\">:</span> <span class=\"token string\">'/blog/:year/:month/:slug'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token maybe-class-name\">Author</span><span class=\"token operator\">:</span> <span class=\"token string\">'/author/:name'</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Templates for source plugins must also be configured here</span>\n    <span class=\"token maybe-class-name\">WordPressPost</span><span class=\"token operator\">:</span> <span class=\"token string\">'/blog/:year/:month/:day/:slug'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token maybe-class-name\">WordPressTag</span><span class=\"token operator\">:</span> <span class=\"token string\">'/tag/:slug'</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Collections can have multiple templates</span>\n    <span class=\"token maybe-class-name\">Product</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/:slug'</span><span class=\"token punctuation\">,</span>\n        component<span class=\"token operator\">:</span> <span class=\"token string\">'./src/templates/Product.vue'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">'/product/:slug/reviews'</span><span class=\"token punctuation\">,</span>\n        component<span class=\"token operator\">:</span> <span class=\"token string\">'./src/templates/ProductReviews.vue'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><strong>This means:</strong></p>\n<ul>\n<li><a href=\"/plugins\">Source plugins</a> &#x26; the <a href=\"/docs/data-store-api/\">Data store API</a> are only responsible for creating <a href=\"/docs/collections/\">Collections</a>.</li>\n<li>The new <a href=\"/docs/templates/\">Templates</a> config are used to setup <strong>templates and routes</strong> for collections.</li>\n</ul>\n<p>Read more about the new <a href=\"/docs/templates/\">templates configuration</a></p>\n<h2 id=\"dynamic-routing\"><a href=\"#dynamic-routing\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dynamic routing</h2>\n<p>Dynamic routing is perfect to use if you need routes for, for example, user accounts or need to fetch data from an external source on client-side. (Data that will not be generated).</p>\n<h4 id=\"file-based-dynamic-routes\"><a href=\"#file-based-dynamic-routes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>File-based dynamic routes</h4>\n<p>Dynamic pages are used for client-side routing. Route parameters can be placed in file and directory names by wrapping the name in square brackets. For example:</p>\n<ul>\n<li><code class=\"language-text\">src/pages/user/[id].vue</code> becomes <code class=\"language-text\">/user/:id</code>.</li>\n<li><code class=\"language-text\">src/pages/user/[id]/settings.vue</code> becomes <code class=\"language-text\">/user/:id/settings</code>.</li>\n</ul>\n<p>At build time, this will generate <code class=\"language-text\">user/_id.html</code> and <code class=\"language-text\">user/_id/settings.html</code> and you must have rewrite rules to make them work properly on a static web host.</p>\n<h4 id=\"programmatic-dynamic-routes\"><a href=\"#programmatic-dynamic-routes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Programmatic dynamic routes</h4>\n<p>Create pages with dynamic routes programmatically for more advanced paths. Dynamic parameters are specified by having a <code class=\"language-text\">:</code> in front of a segment. And each parameter can have a custom regular expression to match only digits or certain values.</p>\n<pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">api</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  api<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">'/user/:id(\\\\d+)'</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> <span class=\"token string\">'./src/templates/User.vue'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p><a href=\"/docs/dynamic-routing/\">Learn more about Dynamic Routing</a></p>\n<h2 id=\"custom-appvue\"><a href=\"#custom-appvue\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Custom App.vue</h2>\n<p><strong>App.vue</strong> is the file that wraps your whole website or app. Gridsome usually adds a <code class=\"language-text\">App.vue</code> automatic in the background. This can now be overridden by having your own <code class=\"language-text\">App.vue</code> file in your <code class=\"language-text\">src</code> directory. Overriding <code class=\"language-text\">App.vue</code> is useful if you want to have a <strong>layout that is shared across all your pages.</strong> Or if you want to have a <code class=\"language-text\">&lt;transition&gt;</code> component around the <code class=\"language-text\">&lt;router-view&gt;</code>.</p>\n<p>Here is an example:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- src/App.vue --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MainLayout</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transition</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transition</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>MainLayout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword module\">import</span> <span class=\"token maybe-class-name\">MainLayout</span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'~/layouts/Main.vue'</span>\n\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token punctuation\">{</span>\n  components<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token maybe-class-name\">MainLayout</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n<p><a href=\"/docs/overriding-app/\">Learn more about overriding App.vue</a></p>\n<h2 id=\"deprecation-notices\"><a href=\"#deprecation-notices\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deprecation notices</h2>\n<p>Deprecated methods and options will now be listed in the terminal with path to location and sometimes with an URL to documentation.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1562 516' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-6ec41dbd22c5b7f3134a5614b0d00715'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-6ec41dbd22c5b7f3134a5614b0d00715)' width='1562' height='516' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAVCAYAAAD2KuiaAAAACXBIWXMAABYlAAAWJQFJUiTwAAAIb0lEQVRYw61YSXcbxxHGe3bIwSwABhjswGDfwRXcSVGUREmWZdo3x1oIMVZsx9Yh1xwsSpYiS/Yv8T3X/IGc8o9Yrq96egaUKcnP1qFeo7url6qu76saxMyn98l4co/i3Jo/HNP86V2R%2bNN7ZL/8G1mQHyEnZL5Qgt%2b6bzw/FpFx1rVffin6puhw%2b%2bKBzGEv59WXZAei97CDNc6rh8H%2bD2QtdJxQHqp1L9U9jH9Paf4Z3/v5VPStQF%2bdfRKehz7mYVs8sNF4ouxDa3Ab0wbDCXAAJuZO79D893co/t0RWd8ekfPoU3K%2b%2b5TMb26T9Y9PpI9xEYzzmPH1bWn1mPUtxo/I5L7NffvRZ5GgPyOOjCnBejPYW41FehjHOQbfQ%2bmos%2bXc4EzVqjPlXo%2bOxFDYBgdYz47FVrH5nAOgBE%2bd8iR72Di%2bTnYyTUYqQx/YLn3oQNLy%2by/c2mmPbNcjy83Ib7QXyUV6qvWidlbSXqTneq%2btmdnztf7rc7Nj5lcfS1QZj%2b%2bED63tjqlXv6cmECKP2REItb9eobiVokq5QJtDnyZ9n1Z7Pm0MfBq3K%2bTgcikvbBOBoU4gCTea%2b0PiXvDb/Z36qRmHJlwy%2bTHj7ABE9Tw7QcMBv2O6o3GCSICyc/caxeYSdHI4oP%2b/ukX/%2bdch/ffxdfrfi1v0yz/3aNTx6fJqm9ZGDWlXh3WasAxaVRp3fRlfHtRlzsvlA2dlI0kHwr/t16PgvQnvnUhTfBo5ANymouD%2b%2bQjQGDGfME5APOwA005RoZCjXi1PvXqRun6O%2brUC%2bUWPDDtJboaNYpg4SZcs9nQCIYg%2bwwaetxIpbpMUZ/hombeSNM9r58wEzVkJGfvDUfKuCJIIiBwg0Q07w0e/xxEQvD4mrGdTmYQD7LuHZPIFc5U6dUYr5JXQLlO9O6bFyRaNlyaUL9eo1urRcHGVusNFKrBuvd2Ttt0fUW%2b0REuTDWp2BtTo9KnOuv3xEg1YFlfWaHmySX6zo6LgXSH%2bZxwQQAD8ph86HkA%2bpo0PhSPA/ilwAL9UtlSlpdV16g7GtL61Kxff2N6jRR5rdods/Ar3L/H4OrV6Q%2bqz0fV2XxwE4/cuX5VxGNrsDmQca1Y3tkPnJDO5c3zyvh1gPbgpKToeRLqOArQCAVPSw1QG7B%2bm5Pz8d7LvXCPLSZGbK5FXqFKp1qZMvsIOqUnYekWfcuU6v3aDCtUm5XgcukW/RXmOgHSuTCmvSEkWhL2Jl9AQsAIIsBgMs/f%2b%2bhc4AFkAj6sJX8M%2bptMfHGA/56ICUHjFWeCLq2TzhZGmcHltQJydYiVVH5fXYgLzjH20kFnc2zyONVZSz6v1IMGEEKHOHrO/z8ufcYA5vSERYIa1jqoDxAH6h44ATYImOyDOHFCuN2l77zI1OKwnmzu0tbsvITxaWqXNnUu0xXMY6/THVPabjPtF6g0XBC77Vw4FAh2GD8YAI8BndX2LVlgS6ZxyXDITOlX9Pi8Yfy8QOI0qXmQB4QBV9t4nR7/%2b02NxACLA4pfNFCvUYKw3eyPqL6wI2VXqLSqxsQ3GL4itzca3BwtUbXZ5fokxP5Y1A9YfMEH6rAO%2b6AwWZY9qo81kuMy80GMirVOW4QQoAWbpfJkhVxEBlAC/Sr3zxsh4Y6TMOMA%2b%2bUhqGxgs9uqyeLYSVBCYSgRIIQQHcLgnvDy5WcUDiUxecI5XQWhbfJDBOkkexzwuD14APzj8uqIfrMU6cAh0sB4ckWejM2yomy3KHJyhf6OFbsoriDMuio4IWtGc414QASc3mdgfim3a3rASnC2FdR1gvjwJHZDKFvgyBb5wUVpgFhdCH4Zn5JJoS3JpMDrm0mww2myxEr6Ox7pJdgzGsBcwr/XQoo%2b9sAf2S0hfnV2o1ALnlORM/IaujpZ0To3DKY772wjAxxLqAP3dEzog/vS8V%2ba%2b/4IMfGEFHFDv9Gjn0oEI8L2wvEY7%2b1dok3GPVLjLv5Hm1hnbwP0C8vvaJk04zW3zmq29fU6Ni2LElcObNF7mNMgwWGPdEXMJ%2bGOBx67duCW1AuoE7Hf9o9vkNzrCNzc/PqKDwxtyB5xz%2bep1qTOQWi8dXJNzMYY5ROa56lI44IbYhNLXEDsjLogJGcwwoxAFiobPD1QaZI8jzVUZr0Vuy4zT8KXxohwFCN1Ko8u80GKHDUUXabHM2C3VWoLhHBdNSJHQwT7AO/TQhy7WlYK9ZZ7HsyVf1uNlo4oxE3x75OSlNYG%2bDQIohPCBBwdozsNXoVSC6r%2bAKD2ABOVrkB2ANGgHhwDPGvsoZZH64szghqTFDOf7QuB5JbIm4AEr6YV6EX49CW/wiNaVtClY92ZSqKfOCtbrWgJj8xyhyujsW0lQO0BXgroahL0xXRTokhgQmHt%2bLBGgK8Eup7B82eeqrS8hPlxYltSGkEV1h3AErkt%2bQ8IdIYySOF/yBbu1VldSIHR1WQwd8EmD9TBfrNalRO5yNsHcgM9oIfuwLsahg0hABsJ9sD/gkglI1XHfXgpLIRTU/%2bc4QJNC%2bIWEMAkcAA4o1pqS/2EkSt59xtr23gFtcA2AWh4O2d1HrsfFR1IXTDZ2hAfgJKQ7cAX4ALgHXrEfOATfEtBb4DIa3xO7XDOgToAe9kGtgXoBnAO%2bgJOwJ%2boIzIE/4HQpqvT3xFsqQSMiwDNDEf9ZLPx3ROdGZkodAboOyEuOboV5Gn2kNpTFCGGkMvAExpH%2bvGI1wHwz4IG2lMW6dAZnQBfz2AN9v9UP0yjGTH7VKNRV%2b2YIvKMSFBKchlkgkLPf/CGC8IifzjiAcYdLzZKgJioc4gapEAYIofEcyKzGxuB1y/W2kCYMhUMwX5J%2bS8b1mlkSRDpT57T43IbowcEqvWUvkN/3OayyQPjQZ3Fl89mvroGrVdi7LLMAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1562\" alt=\"Deprecated Messages\" data-srcset=\"/assets/static/deprecated-messages.82a2fbd.4cdf5ea4de84eb6f27dcb534922fddb4.png 480w, /assets/static/deprecated-messages.cbab2cf.4cdf5ea4de84eb6f27dcb534922fddb4.png 1024w, /assets/static/deprecated-messages.d847c93.4cdf5ea4de84eb6f27dcb534922fddb4.png 1562w\" data-sizes=\"(max-width: 1562px) 100vw, 1562px\" data-src=\"/assets/static/deprecated-messages.d847c93.4cdf5ea4de84eb6f27dcb534922fddb4.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/deprecated-messages.d847c93.4cdf5ea4de84eb6f27dcb534922fddb4.png\" width=\"1562\" alt=\"Deprecated Messages\"></noscript></p>\n<h2 id=\"shareable-network-url\"><a href=\"#shareable-network-url\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shareable Network URL</h2>\n<p>A network URL will now be visible in the terminal. It can be used to test the site on other devices in the same network with hot-reloading etc. This URL will only be active when using the default host, which is <code class=\"language-text\">0.0.0.0</code>, on private networks.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1562 392' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ae6211fb9ef75ca3f506df0e591d2abd'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ae6211fb9ef75ca3f506df0e591d2abd)' width='1562' height='392' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAQCAYAAACm53kpAAAACXBIWXMAABYlAAAWJQFJUiTwAAAGJElEQVRYw7VXW1dTVxDmyZxrknNyJRdyDwkQbgoSQUGx4hKwqy8WRAJqrYqra/UHKBetYl2rD/0B/at7OjN775MDUrUsfJjMvp8933wzezJgHT4C42ALTNTW0TZE9h%2bymIdb4Bw/BpvkA8kuWO%2blUFv3jXfbLDyOa53jJ7ze4jWo3%2b/wHJ3lfnwCjhJ9hqP2uB%2bfqvN3eC%2btcQN5Kvcdy3sYf/Qg8hbv/a7H6221Xn57N/ge9WmebDOVjcaBtI%2b0gXpAG0wgEAA0cWl/EyKvN8HcWwf75To4r34EZ%2b8%2bmM9XwXyxxm375X2es7Ft4Zjx6yprPUbz1ot1sGg/9ukMl85RZ4WFx/ek0H7aw9/dO7mWxuk7xvNVPlt%2bY0229Z327qu96l6v1tlQso0AsN9us61s8wkAaBEhtY%2bTiLCx/QM4MR%2bsuA%2bmE5fixsGOJ8D2EuD4SbD9fpv72NZjWs4c13sDfVpCe1Q7fE7wPf%2bMb/in7oNiPbvHrDLebAaO1nYPSK9vyQmiyBsEgqj28y2w7Rh4hTzkxhowOILSrkMsnQHHS34mBIwTPzVOFwmNRRNpcP3UmfsvVkKOiXpgoTNNBIBYHUEQdDhQe0B3dJwQE2ix/XAZjEsOtO7OwU9/v4J7h49h7dMzKE62oTw9CvXuFGQbNahcHoNMrQLFTguKYy0oY5/mc60G97P1Ks8ni0UcH4Pq1QnIjzTB9SQ47vcAgNmhNLLY7BEAOzKsD5Wzjx6dZICOEesA44QSysPbYCPt47kcZJs1yDTQkEYFoskMxFDimSx7NJbK9HUyzXN6jMexT14niZIk5Tgz43uIZqQGgQBQDGB2k52B07eQAcr7NGG/7fGkBGAZbNdDaifBtOMQMaNgWDFENIG5wAODcwLSK%2bqztlHzBXCe5RsuGva%2bG5ILAUExIAwA5TftaFOF/IA2PhBkgPMnArC5DA4aRod5qUHIl5EF%2bRK2s5AtlCFfqqIuQTKb5z6tcTAPnDZKXioMyNltApboan8LeP%2bDCQ46xt5Z4SfaVEzXLCDNIWDx89DjAQe1%2b%2bkXcDEEOIHgJTP5Ibh24yZMzcxBqdqEhcVbcGVuHi7PdmFiepZ1qdZkNrheqn8B1FE/zeCQpjCIJTIqHNIQT2ZZU0jQmmS2AH461z/jAgGgV4CcqxO%2bDvsB/fwRAM67HfkSHGO8PFgCy4kxAHQh8nRn8grMdhdgZHwKIvhCEPXJi2S4rb0f18ktxR5N5Yag1p6AoVobMgVMltVhBKsNtdY4VIc7rHOlOrTHZ6C7eBcmZ66fZNMFAGD17jADrKDWkXUAA6Ab5HkDk0L9r99g9p99GP99GxaXlmFldZ0NJA%2bv3FuHq9euwzyyYRY1eZAuyd71pNFS%2bgCkcyVojEyy0Zl8GcqNUag0xwJN46V6G0YmZmFheQ2m55ZCAKRC515ACOz3K156BTgHyLL3EbjkfZxwj3oQxRCgHJDAeC/VhxkAC42hUEijRweLFW7TeARZQmyg2KXESKITo2aCl8pBIlNg%2bpNxBBwLhYaiP1Gf1viZfBACzCwqxpQ%2bLwDO7l2ubchgtleXxeFKMAgBmsQQsDZucghEsPqjy1UaLWV4iZMeJcChSoPHm%2b0OG0H5oYyApXNFKGDSdFUCJRZowxNoIBlJxqYGh1hoLovhQawolJuKUSkOn2S2KPVgkZ/RczFgdwUT%2b1POAdreoBLEH0GCaAhEReAiYR3vCmvjlsAkKDC2RXqwKDDxiZm5edGZuiI6k5fFSGdKzM3fEN3rS%2bLm7RWRG6oITIyiu7Aoqs22mJieEfhiiES2IKrD4wJpLtL5sihUmqJYbQmkP8qoQKMF5gDRHJ0WM9eWxdhUF9eVBOYLniPBXIF7hgWyRaBxAoFl/UXxlER9gQwQ%2bGdJYB0gbT3YEtpufgYjKimQXHq9AQb9w9rAUhi97/ipgN5E67AYrqT8l0KAxi18TeQzp586TW1P0VvWFhEbaw1knfbgiRDQdYZ3nhxwh22i0tdQf/x0LsBnED1%2btB2gYpJ82BXmgyWBdYDAYoIRR0p%2bRT5fo73Vnz8tZ%2b/VXjw991Wv/wcDsBAS%2bAcvYAAzHW3GSlD8CyjnwdJH3E8UAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1562\" alt=\"Shareable url\" data-srcset=\"/assets/static/shareable-url.82a2fbd.0e092d11c37eba317c4bcd658a805830.png 480w, /assets/static/shareable-url.cbab2cf.0e092d11c37eba317c4bcd658a805830.png 1024w, /assets/static/shareable-url.d847c93.0e092d11c37eba317c4bcd658a805830.png 1562w\" data-sizes=\"(max-width: 1562px) 100vw, 1562px\" data-src=\"/assets/static/shareable-url.d847c93.0e092d11c37eba317c4bcd658a805830.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/shareable-url.d847c93.0e092d11c37eba317c4bcd658a805830.png\" width=\"1562\" alt=\"Shareable url\"></noscript></p>\n<h2 id=\"breaking-changes\"><a href=\"#breaking-changes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Breaking changes</h2>\n<ul>\n<li>The <code class=\"language-text\">fields</code> property for nodes will not be moved to root automatically anymore. Add custom node fields as root properties instead. <a href=\"/docs/data-store-api/#collectionaddnodeoptions\">Read more</a></li>\n</ul>\n<h2 id=\"other-changes\"><a href=\"#other-changes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Other changes</h2>\n<h4 id=\"trailing-slashes-for-pages-and-routes\"><a href=\"#trailing-slashes-for-pages-and-routes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Trailing slashes for pages and routes</h4>\n<p>Routes for pages in <code class=\"language-text\">./src/pages</code> and all templates will include a trailing slash by default. This can be disabled with the <a href=\"/docs/config/#permalinkstrailingslash\"><code class=\"language-text\">permalinks</code></a> config.</p>\n<p><strong>You should have a trailing slash in every static <code class=\"language-text\">&lt;g-link&gt;</code> path if you are hosting the site on Netlify or ZEIT Now etc. to avoid redirects.</strong> For example:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>g-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/about-us/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>About us<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>g-link</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4 id=\"renamed-methods-and-graphql-fields\"><a href=\"#renamed-methods-and-graphql-fields\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Renamed methods and GraphQL fields</h4>\n<p>There are some methods and GraphQL fields that have been renamed. Using the old names will not break your site, but will show deprecation notices in the terminal:</p>\n<ul>\n<li>Use <code class=\"language-text\">addMetadata()</code> instead of <code class=\"language-text\">addMetaData()</code>.</li>\n<li>Use <code class=\"language-text\">addCollection()</code> instead of  <code class=\"language-text\">addContentType()</code>.</li>\n<li>Use <code class=\"language-text\">metadata</code> instead of <code class=\"language-text\">metaData</code> in the GraphQL schema and project config.</li>\n</ul>\n<h4 id=\"deprecated-collection-methods\"><a href=\"#deprecated-collection-methods\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deprecated collection methods</h4>\n<p>The new <a href=\"/docs/schema-api/\">Schema API</a> is deprecating previous methods for customizing the schema:</p>\n<ul>\n<li>Use <code class=\"language-text\">addSchemaResolvers()</code> instead of <code class=\"language-text\">collection.addSchemaField()</code>.</li>\n<li><code class=\"language-text\">addSchemaTypes()</code> can be instead of <code class=\"language-text\">collection.addReference()</code>. It's not deprecated yet, but it will be once we find an easier way to define relations.</li>\n</ul>\n<h4 id=\"new-type-for-the-id-variable\"><a href=\"#new-type-for-the-id-variable\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>New type for the <code class=\"language-text\">$id</code> variable</h4>\n<p>The <code class=\"language-text\">$id</code> variable in <code class=\"language-text\">&lt;page-query&gt;</code> for nodes has previously been a <code class=\"language-text\">String</code> type. Even though the <code class=\"language-text\">id</code> field in the schema was of type <code class=\"language-text\">ID</code>. But the <code class=\"language-text\">$id</code> input variable must also be a <code class=\"language-text\">ID</code> type from now on. Gridsome will fix the type for you automatically and show a deprecation notice untill you have updated the query.</p>\n<p>ðŸ™Œ You will probably get many deprecated messages on your current Gridsome project, but we think these changes are a right direction as we're getting close to a 1.0 version.</p>\n<h2 id=\"how-to-upgrade\"><a href=\"#how-to-upgrade\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>How to upgrade</h2>\n<p>Take a look here on <a href=\"/docs/how-to-upgrade/\">how to upgrade â†’</a>.</p>\n<p><a href=\"https://github.com/gridsome/gridsome/blob/master/gridsome/CHANGELOG.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">See full changelog â†’</a></p>\n","author":[],"excerpt":"Version 0.7 is finally here! Enjoy Vue Components in Markdown, new Schema API, File-based dynamic routing, better Template config, Custom App.vue, Shareable Network URL and more!"}},"context":{}}