(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{194:function(t,a,e){"use strict";a.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},306:function(t,a,e){"use strict";e.r(a);var s=e(0),n=e(194),r=e(1);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}r.a.config.optionMergeStrategies;var p={VueRemarkRoot:n.a},c=function(t){var a=t.options.components=t.options.components||{},e=t.options.computed=t.options.computed||{};Object.keys(p).forEach((function(t){"object"===o(p[t])&&"function"==typeof p[t].render?a[t]=p[t]:e[t]=function(){return p[t]}}))},v=r.a.config.optionMergeStrategies,l="__vueRemarkFrontMatter",u={excerpt:null,title:"Environment variables"};var i=function(t){t.options[l]&&(t.options[l]=u),r.a.util.defineReactive(t.options,l,u),t.options.computed=v.computed({$frontmatter:function(){return t.options[l]}},t.options.computed)},_=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("VueRemarkRoot",[e("h1",{attrs:{id:"environment-variables"}},[e("a",{attrs:{href:"#environment-variables","aria-hidden":"true"}},[t._v("#")]),t._v("Environment variables")]),e("p",[t._v("Sometimes you want configuration values that are different from what you have in the production build. Gridsome utilizes the "),e("a",{attrs:{href:"https://www.npmjs.com/package/dotenv",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("dotenv")]),t._v(" package to make this easy. Create a file called "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v(".env")]),t._v(" at the root of your project.")]),e("p",[t._v("If you want different variables for your local development, then create a file named "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v(".env.development")]),t._v(". Similarly, you can create a file with the name "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v(".env.production")]),t._v(" to have variables only for the production build. Although production variables are usually added by the hosting providers. The default "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v(".env")]),t._v(" file will only be loaded if no "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("dotenv")]),t._v(" file exists for the current environment.")]),e("pre",{pre:!0,attrs:{class:"language-ini"}},[e("code",{pre:!0,attrs:{class:"language-ini"}},[e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GRIDSOME_API_URL")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("https://api.example.com")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DB_USER")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("root")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DB_PASS")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("s1mpl3")])])]),e("h2",{attrs:{id:"usage-on-the-server"}},[e("a",{attrs:{href:"#usage-on-the-server","aria-hidden":"true"}},[t._v("#")]),t._v("Usage on the server")]),e("p",[t._v("All variables will be available as "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("process.env.{name}")]),t._v(" on the server.")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("exports")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      use"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@gridsome/source-plugin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      options"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        username"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DB_USER")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DB_PASS")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])]),e("h2",{attrs:{id:"usage-in-the-browser"}},[e("a",{attrs:{href:"#usage-in-the-browser","aria-hidden":"true"}},[t._v("#")]),t._v("Usage in the browser")]),e("p",[t._v("While all the variables are available on the server, only variables prefixed with "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("GRIDSOME_")]),t._v(" are available in the browser for security reasons. As you see in the example above, only "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("GRIDSOME_API_URL")]),t._v(" is prefixed. That is because we don't want to have "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("DB_USER")]),t._v(" and "),e("code",{pre:!0,attrs:{class:"language-text"}},[t._v("DB_PASS")]),t._v(" compiled into our JavaScript.")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",{pre:!0,attrs:{class:"language-js"}},[e("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword module"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      items"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" axios"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token method function property-access"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GRIDSOME_API_URL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("items")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token property-access"}},[t._v("data")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])])])])}),[],!1,null,null,null);"function"==typeof c&&c(_),"function"==typeof i&&i(_);a.default=_.exports}}]);